name: Publish and Sign Container Image

on:
  schedule:
    - cron: '32 11 * * *'
  push: 
    branches: [ main ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]
env:
  COSIGN_EXPERIMENTAL: 1
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into ghcr.io
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container image
        id: push-step
        uses: docker/build-push-action@master
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
          
  sign:

    runs-on: ubuntu-latest
    permissions:
      packages: write
      id-token: write

    steps:
      - name: Install cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: main
          
      - name: Install Syft
        uses: anchore/sbom-action/download-syft@v0.11.0

      - name: Log into ghcr.io
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Sign the container image
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign ghcr.io/${{ github.repository }}@${{ steps.push-step.outputs.digest }}
          echo "::notice title=Verify signature::COSIGN_EXPERIMENTAL=1 cosign verify ghcr.io/${{ github.repository }}@${{ steps.push-step.outputs.digest }} | jq '.[0]'"
          echo "::notice title=Inspect signature bundle::COSIGN_EXPERIMENTAL=1 cosign verify ghcr.io/${{ github.repository }}@${{ steps.push-step.outputs.digest }} | jq '.[0].optional.Bundle.Payload.body |= @base64d | .[0].optional.Bundle.Payload.body | fromjson'"
          echo "::notice title=Inspect certificate::COSIGN_EXPERIMENTAL=1 cosign verify ghcr.io/${{ github.repository }}@${{ steps.push-step.outputs.digest }}| jq -r '.[0].optional.Bundle.Payload.body |= @base64d | .[0].optional.Bundle.Payload.body | fromjson | .spec.signature.publicKey.content |= @base64d | .spec.signature.publicKey.content' | openssl x509 -text"
      
      - name: Attach SBOM to image
        run: |
          syft "ghcr.io/${{ github.repository }}@${{ steps.push-step.outputs.digest }}" -o spdx-json=sbom-spdx.json
          cosign attest --predicate sbom-spdx.json "ghcr.io/${{ github.repository }}@${{ steps.push-step.outputs.digest }}"
          echo "::notice title=Verify SBOM attestation::COSIGN_EXPERIMENTAL=1 cosign verify-attestation ghcr.io/${{ github.repository }}@${{ steps.push-step.outputs.digest }} | jq '.payload |= @base64d | .payload | fromjson | select(.predicateType == \"cosign.sigstore.dev/attestation/v1\") | .predicate.Data | fromjson'"
